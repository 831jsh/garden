# Template strings

## Introduction

Most string configuration values in `garden.yml` can be templated to inject, among other things, variables,
information about the user's environment, references to other modules/services etc.

The syntax for templated strings is `${some.key}`, much like in Terraform's HCL configuration files (but note that
functions and conditionals are currently not supported).
The key is looked up from the context available when resolving the string. The context depends on where the key in
question is located. See below for the context that is available in different parts of the configuration.

For example, for one service you might want to reference something from another module and expose it as an
environment variable:

```yaml
module:
  name: some-module
  services:
    - name: some-service
      # ...
      env:
        OTHER_MODULE_VERSION: ${modules.other-module.version}
```

You can also inject a template variable into a string. For instance, you might need to include a module's
version as part of a URI:

```yaml
      # ...
      env:
        OTHER_MODULE_ENDPOINT: http://other-module/api/${modules.other-module.version}
```

## Reference

### Non-templatable strings

The following keys must have valid identifiers and cannot be templated:

* `project.name`
* `module.name`
* `module.type`

### Project configuration context

The following keys are available in template strings for all other keys under the `project` key in `garden.yml` files:

```yaml
{{{projectContext}}}
```

### Provider configuration context

The following keys are available for provider configuration keys, under `project.environments[].providers` (excluding
the `name` and `dependencies` keys, which can only use the above [Project context](#project-configuration-context)):

```yaml
{{{providerContext}}}
```

### Module configuration context

The following keys are available in template strings under the `module` key in `garden.yml` files:

```yaml
{{{moduleContext}}}
```
